{"version":3,"sources":["components/InputRange.tsx","components/HalfControl.tsx","components/FullControl.tsx","components/Controllers.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["InputRange","props","onRangeChange","e","value","target","setState","parseInt","state","this","className","onChange","type","min","max","Component","HalfControl","width","height","left","leftOp","top","topOp","right","rightOp","bottom","bottomOp","style","borderRadius","FullControl","Controllers","onDimensionChange","prop","onControlRangeChange","checked","onCopy","copy","copied","setTimeout","onClick","viewBox","d","Footer","href","App","isHalf","onHalfControlRangeChange","border","onFullControlRangeChange","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dbdc02c8.chunk.js","sourcesContent":["import React, { Component, ChangeEvent } from 'react'\n\ninterface IProps { \n  onRangeChange: (value: number) => void\n  value: number\n}\ninterface IState { value: number }\n\nexport default class InputRange extends Component<IProps, IState> {\n\n  constructor(props: IProps) {\n    super(props)\n    const { value } = this.props\n    this.state = { value }\n  }\n\n  onRangeChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { target: { value } } = e\n    const { onRangeChange } = this.props\n    this.setState({value: parseInt(value)}, () => onRangeChange(parseInt(value)))\n  }\n\n  render() {\n    const { value } = this.state\n    return (<input className=\"range\" onChange={this.onRangeChange} type=\"range\" min=\"0\" max=\"100\" value={value} />)\n  }\n}\n","import React, { Component } from 'react'\nimport InputRange from './InputRange'\n\ninterface IProps {\n  onRangeChange: (border: 'left' | 'top' | 'right' | 'bottom' , value: number) => void\n  width: number\n  height: number\n  left: number\n  leftOp: number\n  top: number\n  topOp: number\n  right: number\n  rightOp: number\n  bottom: number\n  bottomOp: number\n}\n\n\nexport default class HalfControl extends Component<IProps> {\n  render() {\n    const { width, height, onRangeChange, left, leftOp, top, topOp, right, rightOp, bottom, bottomOp } = this.props\n    return (\n      <div className=\"box-container\">\n        <div style={{ width, height }}  className=\"box\">\n          <div className=\"left\" style={{ width: height }} ><InputRange value={left} onRangeChange={(value) => onRangeChange('left', value)} /></div>\n          <div className=\"top\" style={{ width: width }} ><InputRange value={top} onRangeChange={(value) => onRangeChange('top', value)} /></div>\n          <div className=\"right\" style={{ width: height }} ><InputRange value={right} onRangeChange={(value) => onRangeChange('right', value)} /></div>\n          <div className=\"bottom\" style={{ width: width }} ><InputRange value={bottom} onRangeChange={(value) => onRangeChange('bottom', value)} /></div>\n          <div className=\"inner-box\" style={{ borderRadius: `${topOp}% ${top}% ${bottomOp}% ${bottom}% / ${left}% ${rightOp}% ${right}% ${leftOp}%` }} ></div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport InputRange from './InputRange'\n\ninterface IProps {\n  onRangeChange: (border: 'left' | 'top' | 'right' | 'bottom' | 'leftOp' | 'topOp' | 'rightOp' | 'bottomOp' , value: number) => void\n  width: number\n  height: number\n  left: number\n  leftOp: number\n  top: number\n  topOp: number\n  right: number\n  rightOp: number\n  bottom: number\n  bottomOp: number\n}\n\nexport default class FullControl extends Component<IProps> {\n  render() {\n    const { width, height, onRangeChange, left, leftOp, top, topOp, right, rightOp, bottom, bottomOp } = this.props\n    return (\n      <div className=\"box-container\">\n        <div style={{ width, height }}  className=\"box\">\n          <div className=\"left\" style={{ width: height }} ><InputRange value={left} onRangeChange={(value) => onRangeChange('left', value)} /></div>\n          <div className=\"left op\" style={{ width: height }} ><InputRange value={leftOp} onRangeChange={(value) => onRangeChange('leftOp', value)} /></div>\n          <div className=\"top\" style={{ width: width }} ><InputRange value={top} onRangeChange={(value) => onRangeChange('top', value)} /></div>\n          <div className=\"top op\" style={{ width: width }} ><InputRange value={topOp} onRangeChange={(value) => onRangeChange('topOp', value)} /></div>\n          <div className=\"right\" style={{ width: height }} ><InputRange value={right} onRangeChange={(value) => onRangeChange('right', value)} /></div>\n          <div className=\"right op\" style={{ width: height }} ><InputRange value={rightOp} onRangeChange={(value) => onRangeChange('rightOp', value)} /></div>\n          <div className=\"bottom\" style={{ width: width }} ><InputRange value={bottom} onRangeChange={(value) => onRangeChange('bottom', value)} /></div>\n          <div className=\"bottom op\" style={{ width: width }} ><InputRange value={bottomOp} onRangeChange={(value) => onRangeChange('bottomOp', value)} /></div>\n          <div className=\"inner-box\" style={{ borderRadius: `${topOp}% ${top}% ${bottomOp}% ${bottom}% / ${left}% ${rightOp}% ${right}% ${leftOp}%` }} ></div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component, ChangeEvent } from 'react'\nimport copy from 'copy-to-clipboard' \n\ninterface IProps {\n  onDimensionChange: (value: number, prop: string) => void\n  width: number\n  height: number\n  topOp: number\n  top: number\n  bottomOp: number\n  bottom: number\n  left: number\n  rightOp: number\n  right: number\n  leftOp: number\n  onControlRangeChange: (isHalf: boolean) => void\n}\n\ninterface IState {\n  width: number\n  height: number\n  copied: boolean\n}\n\nexport default class Controllers extends Component<IProps, IState> {\n\n  constructor(props: IProps) { \n    super(props) \n\n    const { width, height } = this.props\n    this.state = { width, height, copied: false }\n  }\n\n  onDimensionChange = (e: ChangeEvent<HTMLInputElement> , prop: string) => {\n    const { onDimensionChange } = this.props\n    const value = parseInt(e.target.value)\n    this.setState((state) => ({ ...state, [prop]: value}), () => onDimensionChange(value , prop))\n  }\n\n  onControlRangeChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { onControlRangeChange } = this.props\n    onControlRangeChange(!e.target.checked)\n  }\n\n  onCopy = () => {\n    const { topOp, top, bottomOp, bottom, left, rightOp, right, leftOp } = this.props\n    copy(`border-radius: ${topOp}% ${top}% ${bottomOp}% ${bottom}% / ${left}% ${rightOp}% ${right}% ${leftOp}%;`)\n    \n    this.setState({ copied: true }, () => { setTimeout(() => { this.setState({copied: false}) }, 1200) })\n  }\n\n  render() {\n    const { width, height, copied } = this.state\n    const { topOp, top, bottomOp, bottom, left, rightOp, right, leftOp } = this.props\n\n    return (\n      <div className=\"controllers-container\">\n        <div className=\"dimensions\">\n          <h2>Dimensions</h2>\n          <div className=\"control\">\n            <span>Full Control</span>\n            <input type=\"checkbox\" onChange={this.onControlRangeChange} />\n          </div>\n          <div className=\"dims\">\n            <div className=\"dim\">\n              <p>width: </p>\n              <input type=\"number\" min=\"0\" value={width} onChange={(e) => this.onDimensionChange(e, \"width\")} />\n            </div>\n            <div className=\"dim\">\n            <p>height: </p>\n            <input type=\"number\" min=\"0\" value={height} onChange={(e) => this.onDimensionChange(e, \"height\")} />\n          </div>\n          </div>\n        </div>\n        <div className=\"border-radius\">\n          <p>\n            <span className=\"prop\">border-radius: </span> \n            <span className=\"value\">{`${topOp}% ${top}% ${bottomOp}% ${bottom}% / ${left}% ${rightOp}% ${right}% ${leftOp}%;`}</span>\n          </p>\n          <div className=\"copy\">\n            <button onClick={this.onCopy}>\n              { \n                copied ?\n                  <svg height='100%' width='100%' viewBox=\"0 0 496 496\"><path d=\"m494.492188 243.308594-37.25-51.386719 6.601562-63.109375c.359375-3.449219-1.539062-6.734375-4.707031-8.144531l-57.980469-25.800781-25.800781-57.984376c-1.417969-3.160156-4.699219-5.054687-8.144531-4.710937l-63.121094 6.597656-51.382813-37.246093c-2.800781-2.03125-6.589843-2.03125-9.390625 0l-51.386718 37.246093-63.117188-6.597656c-3.441406-.328125-6.710938 1.5625-8.144531 4.703125l-25.800781 57.984375-57.984376 25.808594c-3.164062 1.40625-5.0625 4.691406-4.703124 8.136719l6.597656 63.117187-37.246094 51.386719c-2.03125 2.800781-2.03125 6.589844 0 9.390625l37.246094 51.382812-6.597656 63.121094c-.363282 3.445313 1.535156 6.734375 4.703124 8.144531l57.984376 25.800782 25.800781 57.984374c1.425781 3.148438 4.699219 5.042969 8.144531 4.710938l63.117188-6.601562 51.386718 37.25c2.800782 2.03125 6.589844 2.03125 9.390625 0l51.382813-37.25 63.121094 6.601562c3.445312.347656 6.722656-1.546875 8.144531-4.703125l25.800781-57.984375 57.980469-25.808594c3.164062-1.410156 5.0625-4.691406 4.707031-8.136718l-6.601562-63.121094 37.25-51.382813c2.035156-2.800781 2.035156-6.597656 0-9.398437zm-52 53.863281c-1.160157 1.597656-1.6875 3.566406-1.480469 5.527344l6.304687 60.382812-55.480468 24.699219c-1.8125.796875-3.265626 2.242188-4.066407 4.054688l-24.679687 55.480468-60.398438-6.3125c-1.960937-.203125-3.925781.328125-5.519531 1.488282l-49.160156 35.632812-49.167969-35.632812c-1.363281-.996094-3.003906-1.53125-4.6875-1.527344-.28125 0-.5625 0-.800781.039062l-60.402344 6.3125-24.679687-55.480468c-.804688-1.8125-2.25-3.261719-4.0625-4.066407l-55.511719-24.6875 6.304687-60.382812c.203125-1.960938-.324218-3.929688-1.480468-5.527344l-35.632813-49.167969 35.632813-49.167968c1.15625-1.597657 1.683593-3.566407 1.480468-5.527344l-6.304687-60.386719 55.480469-24.695313c1.8125-.796874 3.261718-2.242187 4.0625-4.054687l24.679687-55.480469 60.402344 6.3125c1.957031.195313 3.921875-.335937 5.519531-1.488281l49.167969-35.632813 49.167969 35.632813c1.59375 1.15625 3.558593 1.683594 5.519531 1.488281l60.398437-6.3125 24.679688 55.480469c.804687 1.8125 2.253906 3.257813 4.066406 4.0625l55.480469 24.6875-6.304688 60.386719c-.207031 1.960937.320313 3.929687 1.480469 5.527344l35.628906 49.167968zm0 0\"/><path d=\"m341.425781 157.308594c-3.125-3.125-8.1875-3.125-11.3125 0l-130.101562 130.101562-39.625-39.550781c-3.121094-3.113281-8.175781-3.113281-11.296875 0l-22.679688 22.542969c-1.503906 1.5-2.351562 3.539062-2.351562 5.664062s.847656 4.164063 2.351562 5.664063l67.921875 67.921875c3.121094 3.121094 8.1875 3.121094 11.3125 0l158.398438-158.402344c3.121093-3.121094 3.121093-8.1875 0-11.3125zm-141.414062 175.382812-56.601563-56.601562 11.3125-11.285156 39.640625 39.558593c3.121094 3.117188 8.179688 3.117188 11.304688 0l130.101562-130.089843 11.328125 11.328124zm0 0\"/></svg>\n                :\n                  <svg height='100%' width='100%' viewBox='0 0 24 24'>\n                    <path d='m17.5 24c-3.584 0-6.5-2.916-6.5-6.5s2.916-6.5 6.5-6.5 6.5 2.916 6.5 6.5-2.916 6.5-6.5 6.5zm0-12c-3.032 0-5.5 2.468-5.5 5.5s2.468 5.5 5.5 5.5 5.5-2.468 5.5-5.5-2.468-5.5-5.5-5.5z' />\n                    <path d='m17.5 21c-.128 0-.256-.049-.354-.146l-3-3c-.195-.195-.195-.512 0-.707s.512-.195.707 0l2.646 2.646 2.646-2.646c.195-.195.512-.195.707 0s.195.512 0 .707l-3 3c-.096.097-.224.146-.352.146z' />\n                    <path d='m17.5 21c-.276 0-.5-.224-.5-.5v-6c0-.276.224-.5.5-.5s.5.224.5.5v6c0 .276-.224.5-.5.5z' />\n                    <path d='m9.5 21h-7c-1.379 0-2.5-1.121-2.5-2.5v-13c0-1.379 1.121-2.5 2.5-2.5h2c.276 0 .5.224.5.5s-.224.5-.5.5h-2c-.827 0-1.5.673-1.5 1.5v13c0 .827.673 1.5 1.5 1.5h7c.276 0 .5.224.5.5s-.224.5-.5.5z' />\n                    <path d='m11.5 6h-6c-.827 0-1.5-.673-1.5-1.5v-2c0-.276.224-.5.5-.5h1.55c.232-1.14 1.243-2 2.45-2s2.218.86 2.45 2h1.55c.276 0 .5.224.5.5v2c0 .827-.673 1.5-1.5 1.5zm-6.5-3v1.5c0 .275.225.5.5.5h6c.275 0 .5-.225.5-.5v-1.5h-1.5c-.276 0-.5-.224-.5-.5 0-.827-.673-1.5-1.5-1.5s-1.5.673-1.5 1.5c0 .276-.224.5-.5.5z' />\n                    <path d='m13.5 9h-10c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h10c.276 0 .5.224.5.5s-.224.5-.5.5z' />\n                    <path d='m10.5 12h-7c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h7c.276 0 .5.224.5.5s-.224.5-.5.5z' />\n                    <path d='m8.5 15h-5c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h5c.276 0 .5.224.5.5s-.224.5-.5.5z' />\n                    <path d='m16.5 9c-.276 0-.5-.224-.5-.5v-3c0-.827-.673-1.5-1.5-1.5h-2c-.276 0-.5-.224-.5-.5s.224-.5.5-.5h2c1.379 0 2.5 1.121 2.5 2.5v3c0 .276-.224.5-.5.5z' />\n                  </svg>\n              }\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <p>Made with <span>&lt;/&gt;</span> by <a href=\"https://www.github.com/AM-77\">Med Amine</a> @<span>AM-77</span></p>\n  )\n}\n","import React, { Component } from 'react'\nimport HalfControl from './components/HalfControl'\nimport FullControl from './components/FullControl'\nimport Controllers from './components/Controllers'\nimport Footer from './components/Footer'\n\ninterface IState {\n  width: number\n  height: number\n  left: number\n  leftOp: number\n  top: number\n  topOp: number\n  right: number\n  rightOp: number\n  bottom: number\n  bottomOp: number\n  isHalf: boolean\n}\n\nexport default class App extends Component <unknown, IState> {\n\n  constructor (props: unknown) {\n    super(props)\n    this.state = { \n      width: 200,\n      height: 200,\n      left: 71,\n      leftOp: 29,\n      top: 34,\n      topOp: 66,\n      right: 38,\n      rightOp: 62,\n      bottom: 66,\n      bottomOp: 34,\n      isHalf: true\n    }\n  }\n\n  onDimensionChange = (value: number , prop: string) => {\n    this.setState((state) => ({...state, [prop]: value}))\n  }\n\n  onControlRangeChange = (isHalf: boolean) => {\n    this.setState({ isHalf })\n  }\n\n  onHalfControlRangeChange = (border: 'left' | 'top' | 'right' | 'bottom' , value: number) => {\n    this.setState((state) => ({ ...state, [border]: value, [border + \"Op\"] : 100 - value  }))\n  }\n\n  onFullControlRangeChange = (border: 'left' | 'top' | 'right' | 'bottom' | 'leftOp' | 'topOp' | 'rightOp' | 'bottomOp' , value: number) => {\n    this.setState((state) => ({ ...state, [border]: value }))\n  }\n\n  render() {\n    const { width, height, left, leftOp, top, topOp, right, rightOp, bottom, bottomOp, isHalf } = this.state\n \n    \n    return ( \n      <div className=\"container\">\n        <div className=\"layer\"></div>\n        <div className=\"off-layer\">\n          <div className=\"desc\">\n            <h1>border radius generator</h1>\n            <p>A visaul tool to generate a custom border radius</p>\n          </div>\n          <div className=\"main\">\n            <div className=\"control\">\n              {\n                isHalf ?\n                <HalfControl \n                  onRangeChange={this.onHalfControlRangeChange}\n                  width={width} \n                  height={height}\n                  left={left}\n                  leftOp={leftOp}\n                  top={top}\n                  topOp={topOp}\n                  right={right}\n                  rightOp={rightOp}\n                  bottom={bottom}\n                  bottomOp={bottomOp} />\n                :\n                <FullControl \n                  onRangeChange={this.onFullControlRangeChange}\n                  width={width} \n                  height={height}\n                  left={left}\n                  leftOp={leftOp}\n                  top={top}\n                  topOp={topOp}\n                  right={right}\n                  rightOp={rightOp}\n                  bottom={bottom}\n                  bottomOp={bottomOp} />\n              }\n            </div>\n            <Controllers \n              onDimensionChange={this.onDimensionChange} \n              onControlRangeChange={this.onControlRangeChange}\n              width={width} \n              height={height}\n              left={left}\n              leftOp={leftOp}\n              top={top}\n              topOp={topOp}\n              right={right}\n              rightOp={rightOp}\n              bottom={bottom}\n              bottomOp={bottomOp} /> \n          </div>\n          <div className=\"footer\">\n            <Footer />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}